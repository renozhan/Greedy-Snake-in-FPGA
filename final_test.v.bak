module ex1220(
	output reg [7:0] DATA_R, DATA_G, DATA_B,
	output [3:0] COMM,
	input CLK
);
	counter F0(COMM, CLK, Clear);
	
	initial begin
		DATA_R = 8'b01111111;
		DATA_G = 8'b10111111;
		DATA_B = 8'b11011111;
	end
endmodule

module counter(
	output reg [3:0] A_count, 
	input CLK, Clear
);
	wire CLK_div;
	divfreq F0(CLK, CLK_div);
	always @(posedge CLK_div, posedge Clear)
		if (Clear) A_count <= 4'b1000;
		else begin
			A_count <= A_count + 1'b1;
			if (A_count == 4'b1111) A_count <= 4'b1000;
		end
endmodule

module divfreq(
	input CLK, 
	output reg CLK_div
);
	reg[24:0] Count = 25'b0;
	always @(posedge CLK)
		begin
			if(Count > 25000000)
				begin
					Count <= 25'b0;
					CLK_div <= ~CLK_div;
				end
			else
				Count <= Count + 1'b1;
		end
endmodule